name: CI

on:
  push:
    branches: [ main, benchmarking ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

jobs:
  test:
    name: Test (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          # Latest stable versions
          - elixir: '1.17.3'
            otp: '27.3.4.2'
            coverage: true
            lint: true
          # Previous stable versions for compatibility
          - elixir: '1.16.3'
            otp: '26.2.5'
            coverage: false
            lint: false
          # Minimum supported versions
          - elixir: '1.15.8'
            otp: '26.0'
            coverage: false
            lint: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ matrix.elixir }}-${{ matrix.otp }}-
          ${{ runner.os }}-mix-${{ matrix.elixir }}-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile code
      run: mix compile --warnings-as-errors

    - name: Check code formatting
      if: matrix.lint
      run: mix format --check-formatted

    - name: Run Credo (static analysis)
      if: matrix.lint
      run: mix credo --strict
      continue-on-error: true

    - name: Run unit and integration tests
      run: mix test --exclude performance --exclude stress --exclude recovery

    - name: Generate test coverage
      if: matrix.coverage
      run: mix test --cover --exclude performance --exclude stress --exclude recovery

    - name: Upload coverage to Codecov
      if: matrix.coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./cover/excoveralls.json
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.3.4.2'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-performance-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-performance-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile for performance
      run: MIX_ENV=test mix compile

    - name: Run performance benchmarks
      run: |
        echo "üöÄ Running Performance Benchmarks"
        mix test --include performance --exclude stress --exclude recovery --max-failures 1
        echo "Performance tests completed"

    - name: Run stress tests (limited in CI)
      run: |
        echo "üî• Running Stress Tests (CI-friendly subset)"
        # Run stress tests but with shorter timeouts for CI
        timeout 300 mix test --include stress --exclude performance --exclude recovery --max-failures 1 || echo "Stress tests completed (some may have timed out in CI)"

  recovery:
    name: Recovery & Resilience Tests  
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.3.4.2'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-recovery-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-recovery-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile for recovery tests
      run: MIX_ENV=test mix compile

    - name: Run crash recovery tests
      run: |
        echo "üõ†Ô∏è Running Recovery Tests"
        mix test --include recovery --exclude performance --exclude stress --max-failures 1

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.3.4.2'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-security-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-security-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Security audit
      run: mix deps.audit
      continue-on-error: true

    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused
      continue-on-error: true

  documentation:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: '1.17.3'
        otp-version: '27.3.4.2'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-mix-docs-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-docs-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check documentation coverage
      run: mix docs --output doc
      continue-on-error: true

    - name: Upload documentation
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: doc/
      continue-on-error: true